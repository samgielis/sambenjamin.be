{"version":3,"sources":["webpack:///./src/components/pages/home/children/StoryGrid.tsx","webpack:///./node_modules/react-icons/lib/esm/iconsManifest.js","webpack:///./node_modules/react-icons/lib/esm/iconContext.js","webpack:///./node_modules/react-icons/lib/esm/iconBase.js","webpack:///./src/components/pages/tags/TagPage.tsx","webpack:///./src/templates/TagPageTemplate.tsx"],"names":["compareStoriesMostRecentFirst","a","b","date","StoryGrid","props","cols","stories","sort","map","story","index","StoryThumbnail","key","rows","i","length","thumbnailsInRow","push","fluid","style","maxWidth","alignSelf","margin","padding","md","className","to","getStoryID","height","position","src","getStoryCoverImageURL","alt","title","subTitle","DefaultContext","color","undefined","size","attr","IconContext","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","GenIcon","data","IconBase","Tree2Element","tree","node","tag","child","elem","conf","computedSize","svgProps","stroke","fill","strokeWidth","width","xmlns","children","Consumer","TagPage","componentDidMount","trackPageView","window","location","pathname","search","render","SEO","author","name","keywords","defaultKeywords","description","imageURL","Container","textAlign","React","Component","query","TagPageTemplate","pageContext","allFile","nodes","childStoryIndex","addStaticURLToCoverImages","coverImages","Layout","AUTHOR"],"mappings":"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","file":"component---src-templates-tag-page-template-tsx-e80eabca7b270d507524.js","sourcesContent":["import React from \"react\";\r\nimport { Story, getStoryCoverImageURL, getStoryID } from \"../../../model/Story\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport \"./StoryGrid.css\";\r\nimport { Link } from \"gatsby\";\r\nimport { StoryDate } from \"../../../shared/StoryDate\";\r\nimport { SmoothLoadingImage } from \"../../../shared/SmoothLoadingImage\";\r\n\r\nfunction compareStoriesMostRecentFirst(a: Story, b: Story): number {\r\n  if (a.date > b.date) {\r\n    return -1;\r\n  }\r\n  if (b.date > a.date) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport type StoryGridProps = {\r\n  stories: Story[];\r\n};\r\n\r\nexport function StoryGrid(props: StoryGridProps) {\r\n  const cols = props.stories\r\n    .sort(compareStoriesMostRecentFirst)\r\n    .map((story: Story, index: number) => {\r\n      return <StoryThumbnail key={index} story={story} />;\r\n    });\r\n\r\n  const rows = [];\r\n  for (let i = 0; i < cols.length; i += 3) {\r\n    const thumbnailsInRow = [];\r\n    thumbnailsInRow.push(<StoryThumbnail key={i} story={props.stories[i]} />);\r\n    thumbnailsInRow.push(\r\n      <StoryThumbnail key={i + 1} story={props.stories[i + 1]} />\r\n    );\r\n    thumbnailsInRow.push(\r\n      <StoryThumbnail key={i + 2} story={props.stories[i + 2]} />\r\n    );\r\n    //const colsInRow = [cols[i], cols[i + 1], cols[i + 2]].filter((value) => { return value !== undefined });\r\n    rows.push(<Row key={i}>{thumbnailsInRow}</Row>);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      fluid=\"md\"\r\n      style={{\r\n        maxWidth: \"1500px\",\r\n        alignSelf: \"center\",\r\n        margin: \"auto\",\r\n        padding: \"1rem\",\r\n      }}\r\n    >\r\n      {rows}\r\n    </Container>\r\n  );\r\n}\r\n\r\ntype StoryThumbnailProps = {\r\n  story?: Story;\r\n};\r\n\r\nfunction StoryThumbnail(props: StoryThumbnailProps) {\r\n  if (!props.story) {\r\n    return (\r\n      <Col md={4} className={\"story-thumbnail-wrapper\"}>\r\n        <div className={\"story-thumbnail empty\"}></div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Col md={4} className={\"story-thumbnail-wrapper\"}>\r\n      <article>\r\n        <Link to={`/${getStoryID(props.story)}`}>\r\n          <div className={\"story-thumbnail\"}>\r\n            <SmoothLoadingImage\r\n              style={{ maxWidth: \"100%\", height: \"100%\", position: \"absolute\" }}\r\n              src={getStoryCoverImageURL(props.story)}\r\n              alt={props.story.title}\r\n            />\r\n            <div className=\"story-thumbnail-gradient\"></div>\r\n            <div className=\"story-thumbnail-description\">\r\n              <h2>{props.story.title}</h2>\r\n              <h3>{props.story.subTitle || \"See more\"}</h3>\r\n              <StoryDate date={props.story.date} />\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </article>\r\n    </Col>\r\n  );\r\n}\r\n","export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/refactoringui/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}];","import * as React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var computedSize = props.size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n\n    var attr = props.attr,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"title\"]);\n\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign({\n        color: props.color || conf.color\n      }, conf.style, props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from \"react\";\r\nimport { Story, getStoryCoverImageURL } from \"../../model/Story\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { StoryGrid } from \"../home/children/StoryGrid\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./TagPage.css\";\r\nimport { trackPageView } from \"../../util/Utils\";\r\nimport { Author } from \"../../model/Author\";\r\nimport SEO from \"../../shared/SEO\";\r\nimport defaultKeywords from \"../../../content/Keywords\";\r\n\r\nexport type TagPageProps = {\r\n  author: Author;\r\n  tag: string;\r\n  stories: Story[];\r\n};\r\n\r\nclass TagPage extends React.Component<TagPageProps, {}> {\r\n  componentDidMount() {\r\n    trackPageView(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <SEO\r\n          title={`Stories tagged #${this.props.tag} - sambenjamin.be`}\r\n          author={this.props.author.name}\r\n          keywords={[this.props.tag, ...defaultKeywords]}\r\n          description={`Browse Sam's stories tagged as #${this.props.tag}`}\r\n          imageURL={getStoryCoverImageURL(\r\n            this.props.stories[this.props.stories.length - 1]\r\n          )}\r\n        />\r\n        <Container style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n          <h1>#{this.props.tag}</h1>\r\n          <br></br>\r\n          <h4>\r\n            {\" \"}\r\n            <Link className=\"go-home\" to=\"/\">\r\n              <FaArrowLeft /> See more stories\r\n            </Link>\r\n          </h4>\r\n        </Container>\r\n        <Container fluid={true} style={{ textAlign: \"left\" }}></Container>\r\n\r\n        <StoryGrid stories={this.props.stories}></StoryGrid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TagPage;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { Story } from \"../components/model/Story\";\r\nimport Layout from \"../components/Layout\";\r\nimport TagPage from \"../components/pages/tags/TagPage\";\r\nimport { AUTHOR } from \"../components/model/Author\";\r\nimport {\r\n  CoverImageNode,\r\n  addStaticURLToCoverImages,\r\n} from \"../components/util/Utils\";\r\n\r\ninterface TagPageTemplateProps {\r\n  data: {\r\n    allFile: {\r\n      nodes: { childStoryIndex: Story }[];\r\n    };\r\n    coverImages: {\r\n      nodes: CoverImageNode[];\r\n    };\r\n  };\r\n  pageContext: {\r\n    tag: string;\r\n  };\r\n}\r\n\r\nconst TagPageTemplate = ({ data, pageContext }: TagPageTemplateProps) => {\r\n  const tag = pageContext.tag;\r\n  const stories = data.allFile.nodes.map((node) => node.childStoryIndex);\r\n\r\n  addStaticURLToCoverImages(stories, data.coverImages.nodes);\r\n\r\n  return (\r\n    <Layout>\r\n      <TagPage tag={tag} stories={stories} author={AUTHOR} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TagPageTemplate;\r\n\r\nexport const query = graphql`\r\n  query($tag: String!) {\r\n    allFile(\r\n      filter: {\r\n        extension: { eq: \"json\" }\r\n        childStoryIndex: { tags: { in: [$tag] } }\r\n      }\r\n    ) {\r\n      nodes {\r\n        childStoryIndex {\r\n          title\r\n          date\r\n          description\r\n          instaHandle\r\n          layout\r\n          subTitle\r\n          tags\r\n          photos {\r\n            aperture\r\n            fileName {\r\n              base\r\n            }\r\n            focalLength\r\n            height\r\n            iso\r\n            shutterSpeed\r\n            width\r\n          }\r\n        }\r\n      }\r\n    }\r\n    coverImages: allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"stories\" }\r\n        base: { eq: \"cover.jpg\" }\r\n      }\r\n    ) {\r\n      nodes {\r\n        relativeDirectory\r\n        childImageSharp {\r\n          original {\r\n            src\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}
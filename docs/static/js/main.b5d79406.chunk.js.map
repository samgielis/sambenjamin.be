{"version":3,"sources":["components/util/URLUtils.tsx","components/model/Story.tsx","components/util/Utils.tsx","components/shared/StoryDate.tsx","components/shared/SmoothLoadingImage.tsx","components/pages/home/children/StoryGrid.tsx","components/pages/home/HomePage.tsx","components/pages/story/children/StoryCover.tsx","components/pages/story/children/PhotoWrapper.tsx","components/pages/story/children/PhotoSet.tsx","components/pages/story/children/TagSet.tsx","components/pages/story/children/StoryDescription.tsx","components/pages/story/StoryPage.tsx","components/pages/tags/TagPage.tsx","components/Footer.tsx","components/ScrollToTop.tsx","App.tsx","index.tsx","components/model/Author.tsx"],"names":["getLinkForTag","tag","makeURL","partialURL","getStoryID","story","title","replace","split","join","toLowerCase","getStoryCoverImageURL","downloadJSON","fileName","fetch","then","response","json","trackPageView","url","ReactGA","pageview","StoryDate","props","date","Date","className","month","getMonth","getNameOfMonth","getDate","d","getDateOrdinal","getFullYear","SmoothLoadingImage","state","hasLoaded","this","style","src","alt","onLoad","setState","React","Component","compareStoriesMostRecentFirst","a","b","StoryGrid","cols","stories","sort","map","index","StoryThumbnail","key","rows","i","length","thumbnailsInRow","push","Row","Container","fluid","maxWidth","alignSelf","margin","padding","Col","md","to","height","position","subTitle","HomePage","document","window","location","pathname","search","textAlign","width","author","name","Button","href","variant","StoryCover","titles","instaHandle","backgroundImage","PhotoWrapper","focalLength","photo","aperture","Number","parseFloat","imageURL","storyID","maintainPhotoAspectRatioStyle","imageAspectRatio","paddingBottom","shutterSpeed","iso","PhotoSet","photos","layout","iL","iP","amountOfPhotosInRow","columns","photoInRow","row","TagSet","tags","Tag","value","StoryDescription","description","StoryPage","TagPage","console","log","Footer","ScrollToTop","scrollTo","children","withRouter","App","hasFullyLoaded","storyIndex","redirecter","redirectParameter","URLSearchParams","get","basename","id","storyRoutes","tagRoutes","path","flat","storiesWithTag","filter","includes","initialize","ReactDOM","render","getElementById"],"mappings":"8gBAAO,SAASA,EAAcC,GAC1B,MAAM,SAAN,OAAgBA,EAAhB,KAGG,SAASC,EAAQC,GAEpB,MADW,IACGA,ECYX,SAASC,EAAWC,GACvB,OAAOA,EAAMC,MAAMC,QAAQ,IAAK,OAAOC,MAAM,KAAKC,KAAK,KAAKC,cAGzD,SAASC,EAAsBN,GAClC,OAAOH,EAAQ,WAAD,OAAYE,EAAWC,GAAvB,e,4CCrBX,SAASO,EAAaC,GACzB,OAAOC,MAAMD,GAAUE,MAAK,SAACC,GACzB,OAAOA,EAASC,UAgCjB,SAASC,EAAcC,GAEtBC,IAAQC,SAASF,G,MC9BlB,SAASG,EAAUC,GACtB,IAAMC,EAAO,IAAIC,KAAKF,EAAMC,MAC5B,OAAO,yBAAKE,UAAU,cDFnB,SAAwBF,GAC3B,IAAIG,EAAQ,GAaZ,OAZAA,EAAM,GAAK,UACXA,EAAM,GAAK,WACXA,EAAM,GAAK,QACXA,EAAM,GAAK,QACXA,EAAM,GAAK,MACXA,EAAM,GAAK,OACXA,EAAM,GAAK,OACXA,EAAM,GAAK,SACXA,EAAM,GAAK,YACXA,EAAM,GAAK,UACXA,EAAM,IAAM,WACZA,EAAM,IAAM,WACLA,EAAMH,EAAKI,YCXbC,CAAeL,GADb,IACqBA,EAAKM,UAAU,6BDcxC,SAAwBN,GAC3B,IAAMO,EAAIP,EAAKM,UACf,GAAIC,EAAI,GAAKA,EAAI,GAAI,MAAO,KAC5B,OAAQA,EAAI,IACR,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,KACf,QAAS,MAAO,MCrB6BC,CAAeR,IADzD,KACuE,8BAAOA,EAAKS,gB,UCEjFC,EAAb,YACI,WAAYX,GAAiC,IAAD,8BACxC,4CAAMA,KACDY,MAAQ,CACTC,WAAW,GAHyB,EADhD,sEAQc,IAAD,OACCV,EAAYW,KAAKF,MAAMC,UAAY,SAAW,UAMpD,OAAO,yBAAKE,MAAOD,KAAKd,MAAMe,MAAOZ,UAAW,eAAiBA,EAAWa,IAAKF,KAAKd,MAAMgB,IAAKC,IAAKH,KAAKd,MAAMiB,IAAKC,OALjG,WACjB,EAAKC,SAAS,CACVN,WAAW,WAZ3B,GAAwCO,IAAMC,WCL9C,SAASC,EAA8BC,EAAUC,GAC7C,OAAID,EAAEtB,KAAOuB,EAAEvB,MACH,EAERuB,EAAEvB,KAAOsB,EAAEtB,KACJ,EAEJ,EAOJ,SAASwB,EAAUzB,GAMtB,IALA,IAAM0B,EAAO1B,EAAM2B,QAAQC,KAAKN,GAA+BO,KAAI,SAAC/C,EAAcgD,GAC9E,OAAO,kBAACC,EAAD,CAAgBC,IAAKF,EAAOhD,MAAOA,OAGxCmD,EAAO,GACJC,EAAI,EAAGA,EAAIR,EAAKS,OAAQD,GAAG,EAAG,CACnC,IAAME,EAAiB,GACvBA,EAAgBC,KAAK,kBAACN,EAAD,CAAgBC,IAAKE,EAAGpD,MAAOkB,EAAM2B,QAAQO,MAClEE,EAAgBC,KAAK,kBAACN,EAAD,CAAgBC,IAAKE,EAAE,EAAGpD,MAAOkB,EAAM2B,QAAQO,EAAE,MACtEE,EAAgBC,KAAK,kBAACN,EAAD,CAAgBC,IAAKE,EAAE,EAAGpD,MAAOkB,EAAM2B,QAAQO,EAAE,MAEtED,EAAKI,KAAK,kBAACC,EAAA,EAAD,CAAKN,IAAKE,GAAIE,IAG5B,OACI,kBAACG,EAAA,EAAD,CAAWC,MAAM,KAAKzB,MAAO,CAAC0B,SAAU,SAAUC,UAAW,SAAUC,OAAQ,OAAQC,QAAS,SAC3FX,GASb,SAASF,EAAe/B,GACpB,OAAKA,EAAMlB,MAMJ,kBAAC+D,EAAA,EAAD,CAAKC,GAAI,EAAG3C,UAAW,2BAC1B,iCACI,kBAAC,IAAD,CAAM4C,GAAE,WAAMlE,EAAWmB,EAAMlB,SAC3B,yBAAKqB,UAAW,mBACZ,kBAAC,EAAD,CAAoBY,MAAO,CAAC0B,SAAU,OAAQO,OAAQ,OAAQC,SAAU,YAAajC,IAAK5B,EAAsBY,EAAMlB,OAAQmC,IAAKjB,EAAMlB,MAAMC,QAC/I,yBAAKoB,UAAU,6BACf,yBAAKA,UAAU,+BACX,4BACI,kBAAC,IAAD,CAAM4C,GAAE,WAAMlE,EAAWmB,EAAMlB,SAAWkB,EAAMlB,MAAMC,QAE1D,4BACKiB,EAAMlB,MAAMoE,UAAY,YAE7B,kBAAC,EAAD,CAAWjD,KAAMD,EAAMlB,MAAMmB,YAlBtC,kBAAC4C,EAAA,EAAD,CAAKC,GAAI,EAAG3C,UAAW,2BAC1B,yBAAKA,UAAW,2B,kBCpCfgD,EAAb,4LAGQC,SAASrE,MAAQ,wBACjBY,EAAc0D,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAJjE,+BAQQ,OAAO,yBAAKrD,UAAU,YAClB,kBAACoC,EAAA,EAAD,CAAWxB,MAAO,CAAE0C,UAAW,SAAUb,QAAS,SAC9C,2BAAG,kBAAC,IAAD,CAAMG,GAAI,KACT,yBAAKW,MAAM,QAAQzC,IAAI,kBAAkBD,IAAKrC,EAAQ,mBAE1D,4BAAKmC,KAAKd,MAAM2D,OAAOC,MACvB,kBAACC,EAAA,EAAD,CAAQC,KAAMhD,KAAKd,MAAM2D,OAAO/D,IAAKmE,QAAQ,gBAA7C,sBAGJ,kBAAC,EAAD,CAAWpC,QAASb,KAAKd,MAAM2B,eAjB3C,GAA8BP,IAAMC,W,MCF7B,SAAS2C,EAAWhE,GACvB,IAAMiE,EAAS,GAef,OAdAA,EAAO5B,KAAK,4BAAKrC,EAAMlB,MAAMC,QAEzBiB,EAAMlB,MAAMoE,UACZe,EAAO5B,KAAK,4BAAKrC,EAAMlB,MAAMoE,WAG7BlD,EAAMlB,MAAMoF,aACZD,EAAO5B,KACH,kBAACwB,EAAA,EAAD,CAAQE,QAAQ,gBAAgBD,KAAI,gCAA2B9D,EAAMlB,MAAMoF,cAA3E,IACMlE,EAAMlB,MAAMoF,cAMtB,yBAAK/D,UAAU,eAEX,kBAACoC,EAAA,EAAD,CAAWpC,UAAU,0CACjB,yBAAKA,UAAU,cAAcY,MAAO,CAAEoD,gBAAgB,QAAD,OAAU/E,EAAsBY,EAAMlB,OAAtC,SAErD,yBAAKqB,UAAU,4DACV8D,GAEL,yBAAK9D,UAAU,kBACX,6BACI,oCAAS,kBAAC,IAAD,CAAMA,UAAU,cAAc4C,GAAI,KAAM/C,EAAM2D,OAAOC,QAElE,kBAAC,EAAD,CAAW3D,KAAMD,EAAMlB,MAAMmB,U,YC/B1C,SAASmE,EAAapE,GAA2B,IAAD,EAC7CqE,GAAc,UAAArE,EAAMsE,MAAMD,mBAAZ,eAAyBrF,QAAQ,KAAM,MAAO,UAC5DuF,EAAWC,OAAOC,WAAWzE,EAAMsE,MAAMC,UAAY,OACrDG,EAAW/F,EAAQ,WAAD,OAAYqB,EAAM2E,QAAlB,YAA6B3E,EAAMsE,MAAMhF,WAC7DsF,EAAgC,GAE9BC,EAAmB7E,EAAMsE,MAAMtB,OAAUhD,EAAMsE,MAAMZ,MAQ3D,OAPImB,EAAmB,IACnBD,EAAgC,CAC5BE,cAAc,GAAD,OAAwB,IAAnBD,EAAL,KACb7B,OAAQ,MAIT,yBAAK7C,UAAU,gBAAgBY,MAAO6D,GACzC,kBAAC,EAAD,CAAoB5D,IAAK0D,EAAUzD,IAAKjB,EAAMsE,MAAMhF,WACpD,yBAAKa,UAAU,iBACX,2BAAIkE,EAAJ,MAAoBE,EAApB,IAA+BvE,EAAMsE,MAAMS,aAA3C,QAA8D/E,EAAMsE,MAAMU,OClB/E,SAASC,EAASjF,GAKrB,IAJA,IAAMkF,EAASlF,EAAMlB,MAAMoG,OACrBC,EAASnF,EAAMlB,MAAMqG,OACrBlD,EAAO,GAEJmD,EAAK,EAAGC,EAAK,EAAGD,EAAKD,EAAOhD,OAAQiD,IAAM,CAG/C,IAFA,IAAME,EAAsBH,EAAOC,GAC7BG,EAAU,GACPC,EAAa,EAAGA,EAAaF,EAAqBE,IAAcH,IACrEE,EAAQlD,KACJ,kBAACQ,EAAA,EAAD,CAAKb,IAAKqD,EAAIvC,GAAI,GAAKwC,GACnB,kBAAC,EAAD,CAAchB,MAAOY,EAAOG,GAAKV,QAAS9F,EAAWmB,EAAMlB,WAIvE,IAAM2G,EAAM,kBAACnD,EAAA,EAAD,KAAMiD,GAClBtD,EAAKI,KAAKoD,GAEd,OAAO,kBAAClD,EAAA,EAAD,CAAWC,OAAO,EAAMrC,UAAU,YACpC8B,G,MCnBF,SAASyD,EAAO1F,GACnB,OAAO,kBAACuC,EAAA,EAAD,CAAWC,OAAO,EAAMrC,UAAU,mBAChCH,EAAM2F,KAAK9D,KAAI,SAACnD,GAAU,OAAO,kBAACkH,EAAD,CAAKC,MAAOnH,QAQ1D,SAASkH,EAAI5F,GACT,OAAO,kBAAC,IAAD,CAAM+C,GAAItE,EAAcuB,EAAM6F,QACjC,kBAAChC,EAAA,EAAD,CAAQ1D,UAAW,MAAO4D,QAAQ,aAAlC,IAAgD/D,EAAM6F,Q,MCbvD,SAASC,EAAiB9F,GAE7B,OAAKA,EAAMlB,MAAMiH,YAIV,kBAACxD,EAAA,EAAD,CAAWpC,UAAU,qBACxB,kBAACmC,EAAA,EAAD,KACI,kBAACO,EAAA,EAAD,CAAKC,GAAI,IACL,2BACK9C,EAAMlB,MAAMiH,gBAPlB,8B,ICkBAC,E,4LAbX5C,SAASrE,MAAT,UAAoB+B,KAAKd,MAAMlB,MAAMC,MAArC,eAAiD+B,KAAKd,MAAM2D,OAAOC,KAAnE,qBACAjE,EAAc0D,OAAOC,SAASC,SAAWF,OAAOC,SAASE,U,+BAIzD,OAAO,yBAAKrD,UAAU,cACpB,kBAAC,EAAD,CAAYrB,MAAOgC,KAAKd,MAAMlB,MAAO6E,OAAQ7C,KAAKd,MAAM2D,SACxD,kBAAC,EAAD,CAAkB7E,MAAOgC,KAAKd,MAAMlB,QACpC,kBAAC,EAAD,CAAUA,MAAOgC,KAAKd,MAAMlB,QAC5B,kBAAC,EAAD,CAAQ6G,KAAM7E,KAAKd,MAAMlB,MAAM6G,MAAQ,U,GAZrBvE,IAAMC,W,QCyBf4E,G,kBAvBb,WAAYjG,GAAsB,IAAD,6BAC/B,4CAAMA,IACNkG,QAAQC,IAAI,iBAFmB,E,iFAK/B/C,SAASrE,MAAT,0BAAoC+B,KAAKd,MAAMtB,IAA/C,qBACAiB,EAAc0D,OAAOC,SAASC,SAAWF,OAAOC,SAASE,U,+BAIzD,OAAO,yBAAKrD,UAAU,YACd,kBAACoC,EAAA,EAAD,CAAWxB,MAAO,CAAE0C,UAAW,SAAUb,QAAS,SAC9C,gCAAM9B,KAAKd,MAAMtB,KACjB,6BACA,gCAAK,kBAAC,IAAD,CAAMyB,UAAU,UAAU4C,GAAG,KAAI,kBAAC,IAAD,MAAjC,uBAET,kBAACR,EAAA,EAAD,CAAWC,OAAO,EAAMzB,MAAO,CAAE0C,UAAW,UAG5C,kBAAC,EAAD,CAAW9B,QAASb,KAAKd,MAAM2B,e,GArBrBP,IAAMC,Y,YCJrB,SAAS+E,EAAOpG,GACnB,OAAO,gCACH,kBAACuC,EAAA,EAAD,CAAWC,OAAO,GACd,yBAAKrC,UAAU,kBAEf,oCAAM,IAAID,MAAOQ,cAAjB,IAAgC,kBAAC,IAAD,CAAMqC,GAAG,KAAK/C,EAAM2D,OAAOC,MACvD,6BADJ,qB,ICTNyC,E,2LACiBrG,GACXc,KAAKd,MAAMsD,WAAatD,EAAMsD,UAC9BD,OAAOiD,SAAS,EAAG,K,+BAKvB,OAAOxF,KAAKd,MAAMuG,a,GARAnF,IAAMC,WAYjBmF,cAAWH,GCoGXI,E,6LAvFX3F,KAAKK,SAAS,CACZuF,gBAAgB,EAChB/E,QAAS,O,0CAIQ,IAAD,OAClBtC,EAAaV,EAAQ,uBAAuBa,KAA5C,uCAAiD,WAAOmH,GAAP,6BAAApF,EAAA,sDACzCI,EAAU,GAD+B,8BAE3BgF,EAAWhF,QAFgB,yEAEtCgD,EAFsC,kBAGzBtF,EAAaV,EAAQ,WAAD,OAAYgG,EAAZ,iBAHK,QAGvC7F,EAHuC,OAI7C6C,EAAQU,KAAKvD,GAJgC,6QAM/C,EAAKqC,SAAS,CACZuF,gBAAgB,EAChB/E,QAASA,IARoC,4EAAjD,yD,+BA0CA,IAAKb,KAAKF,MAAM8F,eACd,OAAO,kBAACnE,EAAA,EAAD,CAAWpC,UAAU,aAAaqC,OAAO,GAC9C,oDAUJ,IACIoE,EADEC,EAAoB,IAAIC,gBAAgBzD,OAAOC,SAASE,QAAQuD,IAAI,KAQ1E,OALEH,EADEC,EACW,kBAAC,IAAD,CAAU9D,GAAE,OAAE8D,QAAF,IAAEA,OAAF,EAAEA,EAAmB7H,QAAQ,kBAAmB,MAE5D,8BAGP,kBAAC,IAAD,CAAQgI,SAdD,KAeZJ,EACD,yBAAKK,GAAG,kBACN,kBAAC,IAAD,KACGnG,KAAKoG,YACLpG,KAAKqG,UACN,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUzF,QAASb,KAAKF,MAAMe,QAASgC,OAAQ7C,KAAKd,MAAM2D,YAIhE,kBAAC,EAAD,CAAQA,OAAQ7C,KAAKd,MAAM2D,a,kCA7Dd,IAAD,OAChB,OAAO7C,KAAKF,MAAMe,QAAQE,KAAI,SAAC/C,GAC7B,OAAO,kBAAC,IAAD,CAAOsI,KAAI,WAAMvI,EAAWC,IAAUkD,IAAKnD,EAAWC,IAC3D,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWA,MAAOA,EAAO6E,OAAQ,EAAK3D,MAAM2D,gB,gCAOnC,IAAD,OAKd,OAJa7C,KAAKF,MAAMe,QAAQE,KAAI,SAAC/C,GACnC,OAAOA,EAAM6G,MAAQ,MACpB0B,OAESxF,KAAI,SAACnD,GACf,IAAM4I,EAAiB,EAAK1G,MAAMe,QAAQ4F,QAAO,SAACzI,GAAkB,IAAD,EACjE,iBAAOA,EAAM6G,YAAb,aAAO,EAAY6B,SAAS9I,MAE9B,OAAO,kBAAC,IAAD,CAAO0I,KAAM3I,EAAcC,GAAMsD,IAAKvD,EAAcC,IACzD,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASA,IAAKA,EAAKiD,QAAS2F,a,GA7CpBlG,IAAMC,WCrBpBxB,IAAQ4H,WAAW,kBAGvBC,IAASC,OACL,kBAAC,EAAD,CAAKhE,OCNsB,CAC3BC,KAAM,eACNhE,IAAK,qCDKLwD,SAASwE,eAAe,W","file":"static/js/main.b5d79406.chunk.js","sourcesContent":["export function getLinkForTag(tag: string): string {\r\n    return `/does/${tag}/`;\r\n}\r\n\r\nexport function makeURL(partialURL: string): string {\r\n    let base = \"/\";\r\n    return base + partialURL;\r\n}","import { Photo } from \"./Photo\";\r\nimport { makeURL } from \"../util/URLUtils\";\r\n\r\nexport type StoryIndex = {\r\n    stories: string[]\r\n}\r\n\r\nexport type Story = {\r\n    title: string,\r\n    subTitle?: string,\r\n    description?: string,\r\n    instaHandle?: string,\r\n    date: string,\r\n    photos: Photo[],\r\n    layout: number[],\r\n    tags?: string[]\r\n}\r\n\r\nexport function getStoryID(story: Story): string {\r\n    return story.title.replace(\"&\", \"and\").split(\" \").join(\"-\").toLowerCase();\r\n}\r\n\r\nexport function getStoryCoverImageURL(story: Story): string {\r\n    return makeURL(`stories/${getStoryID(story)}/cover.jpg`);\r\n}","import ReactGA from 'react-ga';\r\n\r\nexport function downloadJSON(fileName: string): Promise<any> {\r\n    return fetch(fileName).then((response) => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport function getNameOfMonth(date: Date): string {\r\n    let month = [];\r\n    month[0] = \"January\";\r\n    month[1] = \"February\";\r\n    month[2] = \"March\";\r\n    month[3] = \"April\";\r\n    month[4] = \"May\";\r\n    month[5] = \"June\";\r\n    month[6] = \"July\";\r\n    month[7] = \"August\";\r\n    month[8] = \"September\";\r\n    month[9] = \"October\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n    return month[date.getMonth()];\r\n}\r\n\r\nexport function getDateOrdinal(date: Date): string {\r\n    const d = date.getDate();\r\n    if (d > 3 && d < 21) return 'th';\r\n    switch (d % 10) {\r\n        case 1: return \"st\";\r\n        case 2: return \"nd\";\r\n        case 3: return \"rd\";\r\n        default: return \"th\";\r\n    }\r\n}\r\n\r\nexport function trackPageView(url: string) {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        ReactGA.pageview(url);\r\n    }\r\n}","import { getNameOfMonth, getDateOrdinal } from \"../util/Utils\";\r\nimport React from 'react';\r\nimport './StoryDate.css'\r\n\r\ntype StoryDateProps = {\r\n    date: string\r\n}\r\n\r\nexport function StoryDate(props: StoryDateProps) {\r\n    const date = new Date(props.date);\r\n    return <div className=\"story-date\">\r\n        {getNameOfMonth(date)} {date.getDate()}<sup>{getDateOrdinal(date)}</sup>, <span>{date.getFullYear()}</span>\r\n    </div>\r\n}","import \"./SmoothLoadingImage.css\";\r\nimport React, { CSSProperties } from \"react\";\r\n\r\ninterface SmoothLoadingImageProps {\r\n    src: string\r\n    alt: string\r\n    style?: CSSProperties\r\n}\r\n\r\ninterface SmoothLoadingImageState {\r\n    hasLoaded: boolean\r\n}\r\n\r\nexport class SmoothLoadingImage extends React.Component<SmoothLoadingImageProps, SmoothLoadingImageState> {\r\n    constructor(props: SmoothLoadingImageProps) {\r\n        super(props);\r\n        this.state = {\r\n            hasLoaded: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const className = this.state.hasLoaded ? 'loaded' : 'loading';\r\n        const loadCallback = () => {\r\n            this.setState({\r\n                hasLoaded: true\r\n            })\r\n        };\r\n        return <img style={this.props.style} className={\"smooth-load \" + className} src={this.props.src} alt={this.props.alt} onLoad={loadCallback}></img>\r\n    }\r\n}","import React from 'react';\r\nimport { Story, getStoryCoverImageURL, getStoryID } from \"../../../model/Story\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport './StoryGrid.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { StoryDate } from '../../../shared/StoryDate';\r\nimport { SmoothLoadingImage } from '../../../shared/SmoothLoadingImage';\r\n\r\nfunction compareStoriesMostRecentFirst(a: Story, b: Story): number {\r\n    if (a.date > b.date) {\r\n        return -1;\r\n    }\r\n    if (b.date > a.date) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport type StoryGridProps = {\r\n    stories: Story[]\r\n}\r\n\r\nexport function StoryGrid(props: StoryGridProps) {\r\n    const cols = props.stories.sort(compareStoriesMostRecentFirst).map((story: Story, index: number) => {\r\n        return <StoryThumbnail key={index} story={story} />;\r\n    });\r\n\r\n    const rows = [];\r\n    for (let i = 0; i < cols.length; i+=3) {\r\n        const thumbnailsInRow =[];\r\n        thumbnailsInRow.push(<StoryThumbnail key={i} story={props.stories[i]} />)\r\n        thumbnailsInRow.push(<StoryThumbnail key={i+1} story={props.stories[i+1]} />)\r\n        thumbnailsInRow.push(<StoryThumbnail key={i+2} story={props.stories[i+2]} />)\r\n        //const colsInRow = [cols[i], cols[i + 1], cols[i + 2]].filter((value) => { return value !== undefined });\r\n        rows.push(<Row key={i}>{thumbnailsInRow}</Row>);\r\n    }\r\n\r\n    return (\r\n        <Container fluid=\"md\" style={{maxWidth: \"1500px\", alignSelf: \"center\", margin: \"auto\", padding: \"1rem\"}}>\r\n            {rows}\r\n        </Container>\r\n    );\r\n}\r\n\r\ntype StoryThumbnailProps = {\r\n    story?: Story\r\n}\r\n\r\nfunction StoryThumbnail(props: StoryThumbnailProps) {\r\n    if (!props.story) {\r\n        return <Col md={4} className={\"story-thumbnail-wrapper\"}>\r\n            <div className={\"story-thumbnail empty\"}></div>\r\n        </Col>\r\n    }\r\n\r\n    return <Col md={4} className={\"story-thumbnail-wrapper\"}>\r\n        <article>\r\n            <Link to={`/${getStoryID(props.story)}`}>\r\n                <div className={\"story-thumbnail\"}>\r\n                    <SmoothLoadingImage style={{maxWidth: \"100%\", height: \"100%\", position: \"absolute\"}} src={getStoryCoverImageURL(props.story)} alt={props.story.title} />\r\n                    <div className=\"story-thumbnail-gradient\" ></div>\r\n                    <div className=\"story-thumbnail-description\">\r\n                        <h2>\r\n                            <Link to={`/${getStoryID(props.story)}`}>{props.story.title}</Link>\r\n                        </h2>\r\n                        <h3>\r\n                            {props.story.subTitle || \"See more\"}\r\n                        </h3>\r\n                        <StoryDate date={props.story.date} />\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </article>\r\n    </Col>\r\n}","import React from 'react';\r\nimport { Story } from '../../model/Story';\r\nimport { StoryGrid } from './children/StoryGrid';\r\nimport { Author } from '../../model/Author';\r\nimport './HomePage.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { trackPageView } from '../../util/Utils';\r\nimport { makeURL } from '../../util/URLUtils';\r\n\r\nexport type HomePageProps = {\r\n    stories: Story[];\r\n    author: Author;\r\n}\r\n\r\nexport class HomePage extends React.Component<HomePageProps, {}> {\r\n\r\n    componentDidMount() {\r\n        document.title = 'Home - sambenjamin.be';\r\n        trackPageView(window.location.pathname + window.location.search);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"homepage\">\r\n            <Container style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n                <p><Link to={\"/\"}>\r\n                    <img width=\"150px\" alt=\"Author portrait\" src={makeURL(\"profile.png\")}></img>\r\n                </Link></p>\r\n                <h1>{this.props.author.name}</h1>\r\n                <Button href={this.props.author.url} variant=\"outline-dark\">Follow @samgielis</Button>\r\n            </Container>\r\n\r\n            <StoryGrid stories={this.props.stories}></StoryGrid>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport { Story, getStoryCoverImageURL } from \"../../../model/Story\";\r\nimport { Author } from \"../../../model/Author\";\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport './StoryCover.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {StoryDate} from \"../../../shared/StoryDate\";\r\n\r\nexport type StoryCoverProps = {\r\n    story: Story,\r\n    author: Author\r\n}\r\n\r\nexport function StoryCover(props: StoryCoverProps) {\r\n    const titles = [];\r\n    titles.push(<h1>{props.story.title}</h1>);\r\n\r\n    if (props.story.subTitle) {\r\n        titles.push(<h2>{props.story.subTitle}</h2>);\r\n    }\r\n\r\n    if (props.story.instaHandle) {\r\n        titles.push(\r\n            <Button variant=\"outline-light\" href={`https://instagram.com/${props.story.instaHandle}`}>\r\n                @{props.story.instaHandle}\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"story-cover\">\r\n\r\n            <Container className=\"d-flex flex-column align-items-center \">\r\n                <div className=\"cover-photo\" style={{ backgroundImage: `url(\"${getStoryCoverImageURL(props.story)}\")` }}>\r\n                </div>\r\n                <div className=\"story-title-wrapper align-self-center align-items-center\">\r\n                    {titles}\r\n                </div>\r\n                <div className=\"author-details\">\r\n                    <div>\r\n                        <span>By <Link className=\"author-name\" to={'/'}>{props.author.name}</Link></span>\r\n                    </div>\r\n                    <StoryDate date={props.story.date}></StoryDate>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./PhotoWrapper.css\";\r\nimport { Photo } from \"../../../model/Photo\";\r\nimport { makeURL } from \"../../../util/URLUtils\";\r\nimport {SmoothLoadingImage} from \"../../../shared/SmoothLoadingImage\";\r\n\r\ntype PhotoWrapperProps = {\r\n    photo: Photo\r\n    storyID: string\r\n}\r\n\r\nexport function PhotoWrapper(props: PhotoWrapperProps) {\r\n    const focalLength = props.photo.focalLength?.replace(/ /g, '') || \"unknown\";\r\n    const aperture = Number.parseFloat(props.photo.aperture || \"NaN\");\r\n    const imageURL = makeURL(`stories/${props.storyID}/${props.photo.fileName}`);\r\n    let maintainPhotoAspectRatioStyle = {};\r\n\r\n    const imageAspectRatio = props.photo.height! / props.photo.width!;\r\n    if (imageAspectRatio > 0) {\r\n        maintainPhotoAspectRatioStyle = {\r\n            paddingBottom: `${imageAspectRatio * 100}%`,\r\n            height: \"0\"\r\n        }\r\n    }\r\n\r\n    return <div className=\"photo-wrapper\" style={maintainPhotoAspectRatioStyle}>\r\n        <SmoothLoadingImage src={imageURL} alt={props.photo.fileName}/>\r\n        <div className='photo-details'>\r\n            <p>{focalLength} f/{aperture} {props.photo.shutterSpeed}s ISO{props.photo.iso}</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./PhotoSet.css\"\r\nimport { getStoryID, Story } from \"../../../model/Story\";\r\nimport { PhotoWrapper } from \"./PhotoWrapper\";\r\n\r\ntype PhotoSetProps = {\r\n    story: Story;\r\n}\r\n\r\nexport function PhotoSet(props: PhotoSetProps) {\r\n    const photos = props.story.photos;\r\n    const layout = props.story.layout;\r\n    const rows = [];\r\n\r\n    for (let iL = 0, iP = 0; iL < layout.length; iL++) {\r\n        const amountOfPhotosInRow = layout[iL];\r\n        const columns = [];\r\n        for (let photoInRow = 0; photoInRow < amountOfPhotosInRow; photoInRow++, iP++) {\r\n            columns.push(\r\n                <Col key={iP} md={12 / amountOfPhotosInRow}>\r\n                    <PhotoWrapper photo={photos[iP]} storyID={getStoryID(props.story)} />\r\n                </Col>\r\n            );\r\n        }\r\n        const row = <Row>{columns}</Row>;\r\n        rows.push(row);\r\n    }\r\n    return <Container fluid={true} className=\"photoset\">\r\n        {rows}\r\n    </Container>\r\n}","import React from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport \"./TagSet.css\"\r\nimport { getLinkForTag } from \"../../../util/URLUtils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype TagSetProps = {\r\n    tags: string[];\r\n}\r\n\r\nexport function TagSet(props: TagSetProps) {\r\n    return <Container fluid={true} className=\"photoset tagset\">\r\n            {props.tags.map((tag) => { return <Tag value={tag}></Tag> })}\r\n    </Container>\r\n}\r\n\r\ntype TagProps = {\r\n    value: string\r\n}\r\n\r\nfunction Tag(props: TagProps) {\r\n    return <Link to={getLinkForTag(props.value)}>\r\n        <Button className={\"tag\"} variant=\"secondary\">#{props.value}</Button>\r\n    </Link>;\r\n    //return <Button className={\"tag\"} variant=\"secondary\" href={getLinkForTag(props.value)}>#{props.value}</Button>\r\n}","import React from 'react';\r\nimport { Story } from \"../../../model/Story\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./StoryDescription.css\";\r\n\r\nexport type StoryDescriptionProps = {\r\n    story: Story,\r\n}\r\n\r\nexport function StoryDescription(props: StoryDescriptionProps) {\r\n\r\n    if (!props.story.description) {\r\n        return <div></div>;\r\n    }\r\n\r\n    return <Container className=\"story-description\">\r\n        <Row>\r\n            <Col md={12}>\r\n                <p>\r\n                    {props.story.description}\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}","import React from 'react';\r\nimport { Story } from \"../../model/Story\";\r\nimport { StoryCover } from \"./children/StoryCover\";\r\nimport { Author } from \"../../model/Author\";\r\nimport { PhotoSet } from './children/PhotoSet';\r\nimport { TagSet } from './children/TagSet';\r\nimport { StoryDescription } from './children/StoryDescription';\r\nimport { trackPageView } from '../../util/Utils';\r\n\r\nexport type StoryPageProps = {\r\n  story: Story;\r\n  author: Author;\r\n}\r\n\r\nclass StoryPage extends React.Component<StoryPageProps, {}> {\r\n\r\n  componentDidMount() {\r\n    document.title = `${this.props.story.title} by ${this.props.author.name} - sambenjamin.be`;\r\n    trackPageView(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return <div className='story-page' >\r\n      <StoryCover story={this.props.story} author={this.props.author}></StoryCover>\r\n      <StoryDescription story={this.props.story}></StoryDescription>\r\n      <PhotoSet story={this.props.story}></PhotoSet>\r\n      <TagSet tags={this.props.story.tags || []}></TagSet>\r\n    </div>;\r\n  }\r\n}\r\nexport default StoryPage;","import React from 'react';\r\nimport { Story } from '../../model/Story';\r\nimport { Container } from 'react-bootstrap';\r\nimport { StoryGrid } from '../home/children/StoryGrid';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./TagPage.css\";\r\nimport { trackPageView } from '../../util/Utils';\r\n\r\nexport type TagPageProps = {\r\n  tag: string\r\n  stories: Story[]\r\n}\r\n\r\nclass TagPage extends React.Component<TagPageProps, {}> {\r\n\r\n  constructor(props: TagPageProps) {\r\n    super(props);\r\n    console.log('making tagpae');\r\n  }\r\n  componentDidMount() {\r\n    document.title = `Stories tagged #${this.props.tag} - sambenjamin.be`;\r\n    trackPageView(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"homepage\">\r\n            <Container style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n                <h1>#{this.props.tag}</h1>\r\n                <br></br>\r\n                <h4> <Link className=\"go-home\" to=\"/\"><FaArrowLeft /> See more stories</Link></h4>\r\n            </Container>\r\n            <Container fluid={true} style={{ textAlign: \"left\", }}>\r\n            </Container>\r\n\r\n            <StoryGrid stories={this.props.stories}></StoryGrid>\r\n        </div>\r\n  }\r\n}\r\nexport default TagPage;","import \"./Footer.css\"\r\nimport React from 'react';\r\nimport { Author } from './model/Author';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype FooterProps = {\r\n    author: Author\r\n}\r\n\r\nexport function Footer(props: FooterProps) {\r\n    return <footer>\r\n        <Container fluid={true}>\r\n            <div className=\"footer-spacer\">\r\n            </div>\r\n            <p>© {new Date().getFullYear()} <Link to='/'>{props.author.name}</Link>\r\n                <br />\r\n        Leuven, Belgium</p>\r\n        </Container>\r\n    </footer>\r\n}","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\ntype ScrollToTopProps = {\r\n    location: any;\r\n}\r\nclass ScrollToTop extends React.Component<any, any> {\r\n    componentDidUpdate(props: ScrollToTopProps) {\r\n        if (this.props.location !== props.location) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { HomePage } from './components/pages/home/HomePage';\r\nimport StoryPage from './components/pages/story/StoryPage';\r\nimport TagPage from './components/pages/tags/TagPage';\r\nimport './App.css';\r\nimport { Story, StoryIndex, getStoryID } from './components/model/Story';\r\nimport { downloadJSON } from \"./components/util/Utils\";\r\nimport { Author } from './components/model/Author';\r\nimport { Footer } from './components/Footer';\r\nimport { getLinkForTag, makeURL } from './components/util/URLUtils';\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport { Container } from 'react-bootstrap';\r\n\r\ntype AppProps = {\r\n  author: Author;\r\n}\r\n\r\ntype AppState = {\r\n  hasFullyLoaded: boolean\r\n  stories: Story[]\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      hasFullyLoaded: false,\r\n      stories: []\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    downloadJSON(makeURL(\"stories/index.json\")).then(async (storyIndex: StoryIndex) => {\r\n      const stories = [];\r\n      for (let storyID of storyIndex.stories) {\r\n        const story = await downloadJSON(makeURL(`stories/${storyID}/index.json`));\r\n        stories.push(story);\r\n      }\r\n      this.setState({\r\n        hasFullyLoaded: true,\r\n        stories: stories\r\n      })\r\n    });\r\n  }\r\n\r\n  get storyRoutes() {\r\n    return this.state.stories.map((story: Story) => {\r\n      return <Route path={`/${getStoryID(story)}`} key={getStoryID(story)}>\r\n        <ScrollToTop>\r\n          <StoryPage story={story} author={this.props.author}></StoryPage>\r\n        </ScrollToTop>\r\n\r\n      </Route>\r\n    });\r\n  }\r\n\r\n  get tagRoutes() {\r\n    const tags = this.state.stories.map((story: Story) => {\r\n      return story.tags || [];\r\n    }).flat();\r\n\r\n    return tags.map((tag: string) => {\r\n      const storiesWithTag = this.state.stories.filter((story: Story) => {\r\n        return story.tags?.includes(tag);\r\n      });\r\n      return <Route path={getLinkForTag(tag)} key={getLinkForTag(tag)}>\r\n        <ScrollToTop>\r\n          <TagPage tag={tag} stories={storiesWithTag}></TagPage>\r\n        </ScrollToTop>\r\n      </Route>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.hasFullyLoaded) {\r\n      return <Container className=\"loadscreen\" fluid={true}>\r\n        <h1>Cleaning my lens...</h1>\r\n      </Container>;\r\n    }\r\n\r\n    let basename = \"/\";\r\n\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      //basename = \"//sambenjamin.be/\";\r\n    }\r\n\r\n    const redirectParameter = new URLSearchParams(window.location.search).get(\"r\");\r\n    let redirecter;\r\n    if (redirectParameter) {\r\n      redirecter = <Redirect to={redirectParameter?.replace(\"/sambenjamin.be\", \"\")} />;\r\n    } else {\r\n      redirecter = <div></div>;\r\n    }\r\n\r\n    return (<Router basename={basename}>\r\n      {redirecter}\r\n      <div id=\"sambenjamin.be\">\r\n        <Switch>\r\n          {this.storyRoutes}\r\n          {this.tagRoutes}\r\n          <Route path=\"/\">\r\n            <ScrollToTop>\r\n              <HomePage stories={this.state.stories} author={this.props.author} />\r\n            </ScrollToTop>\r\n          </Route>\r\n        </Switch>\r\n        <Footer author={this.props.author}></Footer>\r\n      </div>\r\n    </Router>);\r\n  }\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport { AUTHOR } from './components/model/Author';\r\nimport ReactGA from 'react-ga';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    ReactGA.initialize('UA-161391381-1');\r\n}\r\n\r\nReactDOM.render(\r\n    <App author={AUTHOR} />,\r\n    document.getElementById('root') as HTMLElement\r\n);","export type Author = {\r\n    name: string\r\n    url: string\r\n}\r\n\r\nexport const AUTHOR : Author = {\r\n    name: \"Sam Benjamin\",\r\n    url: \"https://instagram.com/samgielis\"\r\n}"],"sourceRoot":""}
{"version":3,"sources":["components/util/URLUtils.tsx","components/model/Story.tsx","components/util/Utils.tsx","components/shared/StoryDate.tsx","components/pages/home/children/StoryGrid.tsx","components/pages/home/HomePage.tsx","components/pages/story/children/StoryCover.tsx","components/pages/story/children/PhotoWrapper.tsx","components/pages/story/children/PhotoSet.tsx","components/pages/story/children/TagSet.tsx","components/pages/story/children/StoryDescription.tsx","components/pages/story/StoryPage.tsx","components/pages/tags/TagPage.tsx","components/Footer.tsx","components/ScrollToTop.tsx","App.tsx","index.tsx","components/model/Author.tsx"],"names":["getLinkForTag","tag","makeURL","partialURL","getStoryID","story","title","replace","split","join","toLowerCase","getStoryCoverImageURL","downloadJSON","fileName","fetch","then","response","json","trackPageView","url","ReactGA","pageview","StoryDate","props","date","Date","className","month","getMonth","getNameOfMonth","getDate","d","getDateOrdinal","getFullYear","compareStoriesMostRecentFirst","a","b","StoryGrid","cols","stories","sort","map","index","StoryThumbnail","key","rows","i","length","thumbnailsInRow","push","Row","Container","fluid","style","maxWidth","alignSelf","margin","padding","Col","md","to","backgroundImage","subTitle","HomePage","document","window","location","pathname","search","textAlign","width","alt","src","this","author","name","Button","href","variant","React","Component","StoryCover","titles","instaHandle","PhotoWrapper","focalLength","photo","aperture","Number","parseFloat","imageURL","storyID","maintainPhotoAspectRatioStyle","imageAspectRatio","height","paddingBottom","shutterSpeed","iso","PhotoSet","photos","layout","iL","iP","amountOfPhotosInRow","columns","photoInRow","row","TagSet","tags","Tag","value","StoryDescription","description","StoryPage","TagPage","console","log","Footer","ScrollToTop","scrollTo","children","withRouter","App","setState","hasFullyLoaded","storyIndex","state","redirecter","redirectParameter","URLSearchParams","get","basename","id","storyRoutes","tagRoutes","path","flat","storiesWithTag","filter","includes","initialize","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.948a1c15.chunk.js","sourcesContent":["export function getLinkForTag(tag: string): string {\r\n    return `/does/${tag}/`;\r\n}\r\n\r\nexport function makeURL(partialURL: string): string {\r\n    let base = \"/\";\r\n    return base + partialURL;\r\n}","import { Photo } from \"./Photo\";\r\nimport { makeURL } from \"../util/URLUtils\";\r\n\r\nexport type StoryIndex = {\r\n    stories: string[]\r\n}\r\n\r\nexport type Story = {\r\n    title: string,\r\n    subTitle?: string,\r\n    description?: string,\r\n    instaHandle?: string,\r\n    date: string,\r\n    photos: Photo[],\r\n    layout: number[],\r\n    tags?: string[]\r\n}\r\n\r\nexport function getStoryID(story: Story): string {\r\n    return story.title.replace(\"&\", \"and\").split(\" \").join(\"-\").toLowerCase();\r\n}\r\n\r\nexport function getStoryCoverImageURL(story: Story): string {\r\n    return makeURL(`stories/${getStoryID(story)}/cover.jpg`);\r\n}","import ReactGA from 'react-ga';\r\n\r\nexport function downloadJSON(fileName: string): Promise<any> {\r\n    return fetch(fileName).then((response) => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport function getNameOfMonth(date: Date): string {\r\n    let month = [];\r\n    month[0] = \"January\";\r\n    month[1] = \"February\";\r\n    month[2] = \"March\";\r\n    month[3] = \"April\";\r\n    month[4] = \"May\";\r\n    month[5] = \"June\";\r\n    month[6] = \"July\";\r\n    month[7] = \"August\";\r\n    month[8] = \"September\";\r\n    month[9] = \"October\";\r\n    month[10] = \"November\";\r\n    month[11] = \"December\";\r\n    return month[date.getMonth()];\r\n}\r\n\r\nexport function getDateOrdinal(date: Date): string {\r\n    const d = date.getDate();\r\n    if (d > 3 && d < 21) return 'th';\r\n    switch (d % 10) {\r\n        case 1: return \"st\";\r\n        case 2: return \"nd\";\r\n        case 3: return \"rd\";\r\n        default: return \"th\";\r\n    }\r\n}\r\n\r\nexport function trackPageView(url: string) {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        ReactGA.pageview(url);\r\n    }\r\n}","import { getNameOfMonth, getDateOrdinal } from \"../util/Utils\";\r\nimport React from 'react';\r\nimport './StoryDate.css'\r\n\r\ntype StoryDateProps = {\r\n    date: string\r\n}\r\n\r\nexport function StoryDate(props: StoryDateProps) {\r\n    const date = new Date(props.date);\r\n    return <div className=\"story-date\">\r\n        {getNameOfMonth(date)} {date.getDate()}<sup>{getDateOrdinal(date)}</sup>, <span>{date.getFullYear()}</span>\r\n    </div>\r\n}","import React from 'react';\r\nimport { Story, getStoryCoverImageURL, getStoryID } from \"../../../model/Story\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport './StoryGrid.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { StoryDate } from '../../../shared/StoryDate';\r\n\r\nfunction compareStoriesMostRecentFirst(a: Story, b: Story): number {\r\n    if (a.date > b.date) {\r\n        return -1;\r\n    }\r\n    if (b.date > a.date) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport type StoryGridProps = {\r\n    stories: Story[]\r\n}\r\n\r\nexport function StoryGrid(props: StoryGridProps) {\r\n    const cols = props.stories.sort(compareStoriesMostRecentFirst).map((story: Story, index: number) => {\r\n        return <StoryThumbnail key={index} story={story} />;\r\n    });\r\n\r\n    const rows = [];\r\n    for (let i = 0; i < cols.length; i+=3) {\r\n        const thumbnailsInRow =[];\r\n        thumbnailsInRow.push(<StoryThumbnail key={i} story={props.stories[i]} />)\r\n        thumbnailsInRow.push(<StoryThumbnail key={i+1} story={props.stories[i+1]} />)\r\n        thumbnailsInRow.push(<StoryThumbnail key={i+2} story={props.stories[i+2]} />)\r\n        //const colsInRow = [cols[i], cols[i + 1], cols[i + 2]].filter((value) => { return value !== undefined });\r\n        rows.push(<Row key={i}>{thumbnailsInRow}</Row>);\r\n    }\r\n\r\n    return (\r\n        <Container fluid=\"md\" style={{maxWidth: \"1500px\", alignSelf: \"center\", margin: \"auto\", padding: \"1rem\"}}>\r\n            {rows}\r\n        </Container>\r\n    );\r\n}\r\n\r\ntype StoryThumbnailProps = {\r\n    story?: Story\r\n}\r\n\r\nfunction StoryThumbnail(props: StoryThumbnailProps) {\r\n    if (!props.story) {\r\n        return <Col md={4} className={\"story-thumbnail-wrapper\"}>\r\n            <div className={\"story-thumbnail empty\"}></div>\r\n        </Col>\r\n    }\r\n\r\n    return <Col md={4} className={\"story-thumbnail-wrapper\"}>\r\n        <article>\r\n            <Link to={`/${getStoryID(props.story)}`}>\r\n                <div className={\"story-thumbnail\"}>\r\n                    <div className=\"story-thumbnail-image\" style={{ backgroundImage: `url(${getStoryCoverImageURL(props.story)}) ` }}></div>\r\n                    <div className=\"story-thumbnail-gradient\" ></div>\r\n                    <div className=\"story-thumbnail-description\">\r\n                        <h2>\r\n                            <Link to={`/${getStoryID(props.story)}`}>{props.story.title}</Link>\r\n                        </h2>\r\n                        <h3>\r\n                            {props.story.subTitle || \"See more\"}\r\n                        </h3>\r\n                        <StoryDate date={props.story.date} />\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </article>\r\n    </Col>\r\n}","import React from 'react';\r\nimport { Story } from '../../model/Story';\r\nimport { StoryGrid } from './children/StoryGrid';\r\nimport { Author } from '../../model/Author';\r\nimport './HomePage.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { trackPageView } from '../../util/Utils';\r\nimport { makeURL } from '../../util/URLUtils';\r\n\r\nexport type HomePageProps = {\r\n    stories: Story[];\r\n    author: Author;\r\n}\r\n\r\nexport class HomePage extends React.Component<HomePageProps, {}> {\r\n\r\n    componentDidMount() {\r\n        document.title = 'Home - sambenjamin.be';\r\n        trackPageView(window.location.pathname + window.location.search);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"homepage\">\r\n            <Container style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n                <p><Link to={\"/\"}>\r\n                    <img width=\"150px\" alt=\"Author portrait\" src={makeURL(\"profile.png\")}></img>\r\n                </Link></p>\r\n                <h1>{this.props.author.name}</h1>\r\n                <Button href={this.props.author.url} variant=\"outline-dark\">Follow @samgielis</Button>\r\n            </Container>\r\n\r\n            <StoryGrid stories={this.props.stories}></StoryGrid>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport { Story, getStoryCoverImageURL } from \"../../../model/Story\";\r\nimport { Author } from \"../../../model/Author\";\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport './StoryCover.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {StoryDate} from \"../../../shared/StoryDate\";\r\n\r\nexport type StoryCoverProps = {\r\n    story: Story,\r\n    author: Author\r\n}\r\n\r\nexport function StoryCover(props: StoryCoverProps) {\r\n    const titles = [];\r\n    titles.push(<h1>{props.story.title}</h1>);\r\n\r\n    if (props.story.subTitle) {\r\n        titles.push(<h2>{props.story.subTitle}</h2>);\r\n    }\r\n\r\n    if (props.story.instaHandle) {\r\n        titles.push(\r\n            <Button variant=\"outline-light\" href={`https://instagram.com/${props.story.instaHandle}`}>\r\n                @{props.story.instaHandle}\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"story-cover\">\r\n\r\n            <Container className=\"d-flex flex-column align-items-center \">\r\n                <div className=\"cover-photo\" style={{ backgroundImage: `url(\"${getStoryCoverImageURL(props.story)}\")` }}>\r\n                </div>\r\n                <div className=\"story-title-wrapper align-self-center align-items-center\">\r\n                    {titles}\r\n                </div>\r\n                <div className=\"author-details\">\r\n                    <div>\r\n                        <span>By <Link className=\"author-name\" to={'/'}>{props.author.name}</Link></span>\r\n                    </div>\r\n                    <StoryDate date={props.story.date}></StoryDate>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./PhotoWrapper.css\";\r\nimport { Photo } from \"../../../model/Photo\";\r\nimport { makeURL } from \"../../../util/URLUtils\";\r\n\r\ntype PhotoWrapperProps = {\r\n    photo: Photo\r\n    storyID: string\r\n}\r\n\r\nexport function PhotoWrapper(props: PhotoWrapperProps) {\r\n    const focalLength = props.photo.focalLength?.replace(/ /g, '') || \"unknown\";\r\n    const aperture = Number.parseFloat(props.photo.aperture || \"NaN\");\r\n    const imageURL = makeURL(`stories/${props.storyID}/${props.photo.fileName}`);\r\n    let maintainPhotoAspectRatioStyle = {};\r\n    \r\n    const imageAspectRatio = props.photo.height!/props.photo.width!;\r\n    if (imageAspectRatio > 0) {\r\n        maintainPhotoAspectRatioStyle = {\r\n            paddingBottom: `${imageAspectRatio*100}%`,\r\n            height: \"0\"\r\n        }\r\n    }\r\n    \r\n    return <div className=\"photo-wrapper\" style={maintainPhotoAspectRatioStyle}>\r\n        <img src={imageURL} alt={props.photo.fileName}></img>\r\n        <div className='photo-details'>\r\n            <p>{focalLength} f/{aperture} {props.photo.shutterSpeed}s ISO{props.photo.iso}</p>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./PhotoSet.css\"\r\nimport { getStoryID, Story } from \"../../../model/Story\";\r\nimport { PhotoWrapper } from \"./PhotoWrapper\";\r\n\r\ntype PhotoSetProps = {\r\n    story: Story;\r\n}\r\n\r\nexport function PhotoSet(props: PhotoSetProps) {\r\n    const photos = props.story.photos;\r\n    const layout = props.story.layout;\r\n    const rows = [];\r\n\r\n    for (let iL = 0, iP = 0; iL < layout.length; iL++) {\r\n        const amountOfPhotosInRow = layout[iL];\r\n        const columns = [];\r\n        for (let photoInRow = 0; photoInRow < amountOfPhotosInRow; photoInRow++, iP++) {\r\n            columns.push(\r\n                <Col key={iP} md={12 / amountOfPhotosInRow}>\r\n                    <PhotoWrapper photo={photos[iP]} storyID={getStoryID(props.story)} />\r\n                </Col>\r\n            );\r\n        }\r\n        const row = <Row>{columns}</Row>;\r\n        rows.push(row);\r\n    }\r\n    return <Container fluid={true} className=\"photoset\">\r\n        {rows}\r\n    </Container>\r\n}","import React from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport \"./TagSet.css\"\r\nimport { getLinkForTag } from \"../../../util/URLUtils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype TagSetProps = {\r\n    tags: string[];\r\n}\r\n\r\nexport function TagSet(props: TagSetProps) {\r\n    return <Container fluid={true} className=\"photoset tagset\">\r\n            {props.tags.map((tag) => { return <Tag value={tag}></Tag> })}\r\n    </Container>\r\n}\r\n\r\ntype TagProps = {\r\n    value: string\r\n}\r\n\r\nfunction Tag(props: TagProps) {\r\n    return <Link to={getLinkForTag(props.value)}>\r\n        <Button className={\"tag\"} variant=\"secondary\">#{props.value}</Button>\r\n    </Link>;\r\n    //return <Button className={\"tag\"} variant=\"secondary\" href={getLinkForTag(props.value)}>#{props.value}</Button>\r\n}","import React from 'react';\r\nimport { Story } from \"../../../model/Story\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./StoryDescription.css\";\r\n\r\nexport type StoryDescriptionProps = {\r\n    story: Story,\r\n}\r\n\r\nexport function StoryDescription(props: StoryDescriptionProps) {\r\n\r\n    if (!props.story.description) {\r\n        return <div></div>;\r\n    }\r\n\r\n    return <Container className=\"story-description\">\r\n        <Row>\r\n            <Col md={12}>\r\n                <p>\r\n                    {props.story.description}\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}","import React from 'react';\r\nimport { Story } from \"../../model/Story\";\r\nimport { StoryCover } from \"./children/StoryCover\";\r\nimport { Author } from \"../../model/Author\";\r\nimport { PhotoSet } from './children/PhotoSet';\r\nimport { TagSet } from './children/TagSet';\r\nimport { StoryDescription } from './children/StoryDescription';\r\nimport { trackPageView } from '../../util/Utils';\r\n\r\nexport type StoryPageProps = {\r\n  story: Story;\r\n  author: Author;\r\n}\r\n\r\nclass StoryPage extends React.Component<StoryPageProps, {}> {\r\n\r\n  componentDidMount() {\r\n    document.title = `${this.props.story.title} by ${this.props.author.name} - sambenjamin.be`;\r\n    trackPageView(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return <div className='story-page' >\r\n      <StoryCover story={this.props.story} author={this.props.author}></StoryCover>\r\n      <StoryDescription story={this.props.story}></StoryDescription>\r\n      <PhotoSet story={this.props.story}></PhotoSet>\r\n      <TagSet tags={this.props.story.tags || []}></TagSet>\r\n    </div>;\r\n  }\r\n}\r\nexport default StoryPage;","import React from 'react';\r\nimport { Story } from '../../model/Story';\r\nimport { Container } from 'react-bootstrap';\r\nimport { StoryGrid } from '../home/children/StoryGrid';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./TagPage.css\";\r\nimport { trackPageView } from '../../util/Utils';\r\n\r\nexport type TagPageProps = {\r\n  tag: string\r\n  stories: Story[]\r\n}\r\n\r\nclass TagPage extends React.Component<TagPageProps, {}> {\r\n\r\n  constructor(props: TagPageProps) {\r\n    super(props);\r\n    console.log('making tagpae');\r\n  }\r\n  componentDidMount() {\r\n    document.title = `Stories tagged #${this.props.tag} - sambenjamin.be`;\r\n    trackPageView(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"homepage\">\r\n            <Container style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n                <h1>#{this.props.tag}</h1>\r\n                <br></br>\r\n                <h4> <Link className=\"go-home\" to=\"/\"><FaArrowLeft /> See more stories</Link></h4>\r\n            </Container>\r\n            <Container fluid={true} style={{ textAlign: \"left\", }}>\r\n            </Container>\r\n\r\n            <StoryGrid stories={this.props.stories}></StoryGrid>\r\n        </div>\r\n  }\r\n}\r\nexport default TagPage;","import \"./Footer.css\"\r\nimport React from 'react';\r\nimport { Author } from './model/Author';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype FooterProps = {\r\n    author: Author\r\n}\r\n\r\nexport function Footer(props: FooterProps) {\r\n    return <footer>\r\n        <Container fluid={true}>\r\n            <div className=\"footer-spacer\">\r\n            </div>\r\n            <p>© {new Date().getFullYear()} <Link to='/'>{props.author.name}</Link>\r\n                <br />\r\n        Leuven, Belgium</p>\r\n        </Container>\r\n    </footer>\r\n}","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\ntype ScrollToTopProps = {\r\n    location: any;\r\n}\r\nclass ScrollToTop extends React.Component<any, any> {\r\n    componentDidUpdate(props: ScrollToTopProps) {\r\n        if (this.props.location !== props.location) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { HomePage } from './components/pages/home/HomePage';\r\nimport StoryPage from './components/pages/story/StoryPage';\r\nimport TagPage from './components/pages/tags/TagPage';\r\nimport './App.css';\r\nimport { Story, StoryIndex, getStoryID } from './components/model/Story';\r\nimport { downloadJSON } from \"./components/util/Utils\";\r\nimport { Author } from './components/model/Author';\r\nimport { Footer } from './components/Footer';\r\nimport { getLinkForTag, makeURL } from './components/util/URLUtils';\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport { Container } from 'react-bootstrap';\r\n\r\ntype AppProps = {\r\n  author: Author;\r\n}\r\n\r\ntype AppState = {\r\n  hasFullyLoaded: boolean\r\n  stories: Story[]\r\n}\r\n\r\nclass App extends React.Component<AppProps, AppState> {\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      hasFullyLoaded: false,\r\n      stories: []\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    downloadJSON(makeURL(\"stories/index.json\")).then(async (storyIndex: StoryIndex) => {\r\n      const stories = [];\r\n      for (let storyID of storyIndex.stories) {\r\n        const story = await downloadJSON(makeURL(`stories/${storyID}/index.json`));\r\n        stories.push(story);\r\n      }\r\n      this.setState({\r\n        hasFullyLoaded: true,\r\n        stories: stories\r\n      })\r\n    });\r\n  }\r\n\r\n  get storyRoutes() {\r\n    return this.state.stories.map((story: Story) => {\r\n      return <Route path={`/${getStoryID(story)}`}>\r\n        <ScrollToTop>\r\n          <StoryPage story={story} author={this.props.author}></StoryPage>\r\n        </ScrollToTop>\r\n\r\n      </Route>\r\n    });\r\n  }\r\n\r\n  get tagRoutes() {\r\n    const tags = this.state.stories.map((story: Story) => {\r\n      return story.tags || [];\r\n    }).flat();\r\n\r\n    return tags.map((tag: string) => {\r\n      const storiesWithTag = this.state.stories.filter((story: Story) => {\r\n        return story.tags?.includes(tag);\r\n      });\r\n      return <Route path={getLinkForTag(tag)}>\r\n        <ScrollToTop>\r\n          <TagPage tag={tag} stories={storiesWithTag}></TagPage>\r\n        </ScrollToTop>\r\n      </Route>\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.hasFullyLoaded) {\r\n      return <Container className=\"loadscreen\" fluid={true}>\r\n        <h1>Cleaning my lens...</h1>\r\n      </Container>;\r\n    }\r\n\r\n    let basename = \"/\";\r\n\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      //basename = \"//sambenjamin.be/\";\r\n    }\r\n\r\n    const redirectParameter = new URLSearchParams(window.location.search).get(\"r\");\r\n    let redirecter;\r\n    if (redirectParameter) {\r\n      redirecter = <Redirect to={redirectParameter?.replace(\"/sambenjamin.be\", \"\")} />;\r\n    } else {\r\n      redirecter = <div></div>;\r\n    }\r\n\r\n    return (<Router basename={basename}>\r\n      {redirecter}\r\n      <div id=\"sambenjamin.be\">\r\n        <Switch>\r\n          {this.storyRoutes}\r\n          {this.tagRoutes}\r\n          <Route path=\"/\">\r\n            <ScrollToTop>\r\n              <HomePage stories={this.state.stories} author={this.props.author} />\r\n            </ScrollToTop>\r\n          </Route>\r\n        </Switch>\r\n        <Footer author={this.props.author}></Footer>\r\n      </div>\r\n    </Router>);\r\n  }\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport { AUTHOR } from './components/model/Author';\nimport ReactGA from 'react-ga';\n\nif (process.env.NODE_ENV === 'production') {\n    ReactGA.initialize('UA-161391381-1');\n}\n\nReactDOM.render(\n    <App author={AUTHOR} />,\n    document.getElementById('root') as HTMLElement\n);","export type Author = {\r\n    name: string\r\n    url: string\r\n}\r\n\r\nexport const AUTHOR : Author = {\r\n    name: \"Sam Benjamin\",\r\n    url: \"https://instagram.com/samgielis\"\r\n}"],"sourceRoot":""}